# html_css-based-complete-website
i have made one project using html css and javascript by the coding classroom
Ex-0 delete- delete is used to delete the key not the variable           EX-1               
let numbers = [1, 2, 3, 4, 5];                                           let numbers = [1,2,3,4,5];
delete numbers[2];                                                           delete numbers;
console.log(numbers)                                                         console.log(numbers);         o/p- [1,2,3,4,5]
Note-  o/p- [ 1, <1 empty item>, 3, 4, 5, 6 ]                             Note- when i delete the variable then also it prints the variable
                                                                          b'coz delete does not delete the variable.it only delete the objects
1) guess the output                                                 
EX-1 const x=[1,2,3,4]     index- 0,1,2,3                         EX-2  const x=[1,2,3,4]   
     console.log(1 in x)   o/p- true                                    console.log(x.includes(1))   o/p- true
     console.log(3 in x)   o/p- true                                    console.log(x.includes(2))   o/p- true
     console.log(4 in x)   o/p- false                                   console.log(x.includes(4))   o/p- false
Note-  in operator => in operator give me the index not value           includes- check whether the data is included in x or not

Ex-3                       EX-4                      EX-5                                  EX-6 console.log((2,3,2+3))
const x=[1,2,3,4]           const x=[1,2,3,4]        let x= (2,3,2+3);                     Note- because first it will resolve comma 
for(let i in x){            for(let i of x){         console.log(x)   o/p-5                operator  and this gives me the last value
    console.log(x[i])           console.log(i)       Note- because this is comma operator
}                              }                     and this gives me the last value

Ex-6                               EX-7                                                    Ex-8
promise.then(() => {               let data = "hello";                                         let data = "hello";
  console.log('Promise 1');        console.log(data[0].toUpperCase() + data.slice(1));         var first=true;
});                                                                                             capitalized_data=""
setTimeout(() => {                                                                              for(i of data){
  console.log('setTimeout');                                                                    if(first===true){
}, 0);                                                                                             var capital = i.toUpperCase();
promise.then(() => {                                                                             capitalized_data+=capital
  console.log('Promise 2');                                                                      first=false;
});                                                                                              }
                                                                                                   else{
o/p- promise 1                                                                                        capitalized_data+=i
     promise 2                                                                                      }
     setTimeout                                                                                    }
                                                                                                   console.log(capitalized_data)

EX-9 camelcase word (without using the join() method )                  EX-10 without using the slice() method
data="hello how are you"                                                function capitalize_word(word){            data= "hello how are you";
capitalized_data = []                                                    let new_data="";                          words=data.split(' ');
words= data.split(' ');                                                   var first=true;                          capitalized_word=[]
for(word of words){                                                      for(i of word){                            for(word of words){
    capital = word.charAt(0).toUpperCase()+ word.slice(1);                 if(first==true){                          capitalized_word.push(capitalize_word(word));
    capitalized_data.push(capital)                                        var capital = i.toUpperCase();             }
}                                                                         new_data=capital;                         console.log(capitalized_word.join(' '));
console.log(capitalized_data);                                            first=false;
var new_data=""                                                           }
for(capital_word of capitalized_data){                                     else{
    new_data+= capital_word + " ";                                            new_data+=i
}                                                                            }
console.log(new_data)                                                       }
                                                                            return new_data
                                                                           }

Q. i want to make this triplets into the ascending order
const data = [[2,3,1],[1,4,3],[4,5,2],[1,2,3]]
increasing_order = data.map((innerdata,index)=>{
                    const new_data=  innerdata.sort((a,b)=>{
                        return a-b;
                    })
                    return new_data
})
console.log(increasing_order)

Q. slice()- splice method is used to slice the array data like
EX-1                        EX-2                          EX-3                    EX-4 suppose we want to convert it into the camelCase             EX-5 suppose we want to convert it into the camelCase
x=[1,2,3,4,5]                x=[1,2,3,4,5]                 x="hello"               x="hello"                                                        x="hello"
new_array=x.slice(1)        new_array=(x.slice(1,4))       new_sring(x.slice(1))   x = x.charAt(0).toUpperCase() + x.slice(1);                      x = x[0].toUpperCase() + x.slice(1);
o/p- [2,3,4,5]               o/p- [2,3,4]                  o/p- ello               console.log(x);                                                  console.log(x);
Note-isme 1st ko chorkar     Note-isme 1st element se 3rd                          Note- isme humne first character ko upparcase me kiya aur                                                                                                                                                        
sari values de degi          tak ki sari values legi                               concatenate kar diya uske bache hue element ke sath

Q.) 
