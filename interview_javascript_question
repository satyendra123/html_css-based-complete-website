# html_css-based-complete-website
i have made one project using html css and javascript by the coding classroom
Ex-0 delete- delete is used to delete the key not the variable           EX-1               
let numbers = [1, 2, 3, 4, 5];                                           let numbers = [1,2,3,4,5];
delete numbers[2];                                                           delete numbers;
console.log(numbers)                                                         console.log(numbers);         o/p- [1,2,3,4,5]
Note-  o/p- [ 1, <1 empty item>, 3, 4, 5, 6 ]                             Note- when i delete the variable then also it prints the variable
                                                                          b'coz delete does not delete the variable.it only delete the objects
1) guess the output                                                 
EX-1 const x=[1,2,3,4]     index- 0,1,2,3                         EX-2  const x=[1,2,3,4]   
     console.log(1 in x)   o/p- true                                    console.log(x.includes(1))   o/p- true
     console.log(3 in x)   o/p- true                                    console.log(x.includes(2))   o/p- true
     console.log(4 in x)   o/p- false                                   console.log(x.includes(4))   o/p- false
Note-  in operator => in operator give me the index not value           includes- check whether the data is included in x or not

Ex-3                       EX-4 
const x=[1,2,3,4]           const x=[1,2,3,4]
for(let i in x){            for(let i of x){
    console.log(x[i])           console.log(i)
}                              }

Ex-5                               EX-6                                                    Ex-7
promise.then(() => {               let data = "hello";                                         let data = "hello";
  console.log('Promise 1');        console.log(data[0].toUpperCase() + data.slice(1));         var first=true;
});                                                                                             capitalized_data=""
setTimeout(() => {                                                                              for(i of data){
  console.log('setTimeout');                                                                    if(first===true){
}, 0);                                                                                             var capital = i.toUpperCase();
promise.then(() => {                                                                             capitalized_data+=capital
  console.log('Promise 2');                                                                      first=false;
});                                                                                              }
                                                                                                   else{
o/p- promise 1                                                                                        capitalized_data+=i
     promise 2                                                                                      }
     setTimeout                                                                                    }
                                                                                                   console.log(capitalized_data)
