1) agar backened se is tarah ka data aaye to in data ko hum kaise store karakar manage karte hai. aur mujhe isme date time ko extract karke time aur date nikalna hai
{                                                                                              EX
    "latest_entry": {                                                                          
        "id": 1,                                                                                                                                  
        "car_number": "up16cd1234",                                                                                                               
        "car_type": "4W",                                                                                                                          
        "mobile_number": null,                                                                useEffect(() => {
        "tag": "1234567891112",                                                                     const fetchGateAction = async () => {
        "entry_time": "2025-06-06T04:53:10.409170Z",                                                try {
        "exit_time": null,                                                                                const response = await axios.get("http://127.0.0.1:8000/latest-gate-action")
        "active": true,                                                                                   const { new_entry, new_exit } = response.data;
        "created_at": "2025-06-06T01:53:33.181449Z",                                                      setLatestGateAction({ latest_entry: new_entry ? { id: new_entry.id ?? null, car_number: new_exit.car_number ?? "", entry_time: new_entry.entry_time ?? "",exit_time: new_entry.exit_time ?? "", } : { id: null, car_number: "", entry_time: "", exit_time: "", },
        "updated_at": "2025-06-06T04:53:10.409170Z"                                                                             latest_exit: new_exit ? { id: new_exit.id ?? null, car_number: new_exit.car_number ?? "", entry_time: new_exit.entry_time ?? "",exit_time: new_exit.exit_time ?? "", } : { id: null, car_number: "", entry_time: "", exit_time: "", }, 
    },                                                                                                                        });
     "latest_entry": {
        "id": 1,
        "car_number": "up16cd1234",
        "car_type": "4W",
        "mobile_number": null,
        "tag": "1234567891112",
        "entry_time": "2025-06-06T04:53:10.409170Z",
        "exit_time": null,
        "active": true,
        "created_at": "2025-06-06T01:53:33.181449Z",
        "updated_at": "2025-06-06T04:53:10.409170Z"
    },
}

Note- Ex-1                                                                                     EX-2
const [latestGateAction, setLatestGateAction] = useState({ latest_entry, latest_exit},         const [latestGateAction, setLatestGateAction] = useState({ 
useEffect(() => {                                                                                                                      latest_entry: {id: null,car_number: "",entry_time: "",exit_time: "",  },
         const fetchGateAction = async () => {                                                                                         latest_exit: {id: null,car_number: "",entry_time: "",exit_time: "",  },
         try {                                                                                                                      });
               const response = await axios.get("http://127.0.0.1:8000/latest-gate-action")    useEffect(() => {
               const { new_entry, new_exit } = response.data;                                     const fetchGateAction = async () => {
                                                                                                  try {
EX-3  in this add the keys dynamically at run time                                                                                                    const response = await axios.get("http://127.0.0.1:8000/latest-gate-action")
  const [latestGateAction, setLatestGateAction] = useState({});                                           const new_entry = response.data.latest_entry;
  useEffect(() => {                                                                                       const new_exit = response.data.latest_exit;
    const fetchGateAction = async () => {                                                                 // const {latest_entry:new_entry, latest_exit:new_exit} = response.data    Note- iska mtlb hota hai ki
      try {                                                                                               // const {latest_entry, latest_exit} = response.data
        const response = await axios.get("http://127.0.0.1:8000/latest-gate-action", {
          headers: {
            "Content-Type": "application/json",
          },
        });

        const { latest_entry, latest_exit } = response.data;
        setLatestGateAction({latest_entry,latest_exit,});
      } catch (error) {
        console.error("Error fetching gate action:", error);
      }
    };

    fetchGateAction();
    const interval = setInterval(fetchGateAction, 5000);
    return () => clearInterval(interval);
  }, []); 
  Note- const { latest_entry, latest_exit } = response.data; iska mtlb               Note-  // const {latest_entry:new_entry, latest_exit:new_exit} = response.data    Note- iska mtlb hota hai ki response.data.latest_entry wala data jo hai wo new_entry me chala jaye
                                                                                                          


 2)                                                                    EX-      Note- axios hume 6 object deta hai response me, data,statuscode,statusText,headers,config,request 
                                                                         const [activitydata, setActivitydata]=useState([])
                                                                         useEffect(()=>{
                                                                          try{
[                                                                             const fetchdata = async() =>{
    {                                                                         const response = await axios.get("http://localhost:8000/vehicle-data");
        "id": 1,                                                              console.log(response.data) 
        "car_number": "up16cd1234",                                           if(!response.status==200) {
        "car_type": "4W",                                                      console.log("Error getting the response")
        "mobile_number": null,                                                 }
        "tag": "1234567891112",                                               else{
        "entry_time": "2025-06-06T04:53:10.409170Z",                           console.log("data is fetched successfully")
        "exit_time": null,                                                    }
        "active": true,                                                    catch(e){
        "created_at": "2025-06-06T01:53:33.181449Z",                        console.log("error while fetching the data", e.message)
        "updated_at": "2025-06-06T04:53:10.409170Z"                       }
    }                                                                     fetchdata()
]                                                                                                         
                                                                           setInterval(fetchdata,3000);
                                                                             },[3000]) 
3)
{
    "total_tags": 3,
    "total_in_vehicle": 0,
    "total_out_vehicle": 0,
    "total_overstay_vehicles": 0
}

Note- mujhe server par ye data send karna hai to mai ye chiz kaise karunga. aur mujhe input fields me validations bhi lgana hai ki fixed rate jo hai -ve value na le. mobile number jo hai kewal numbers hi le.
{
  "car_type": "2W",
  "tag_number": "ABC1234",
  "fixed_rate": 1500,
  "start_date": "2025-06-01",
  "end_date": "2025-12-01"
}

