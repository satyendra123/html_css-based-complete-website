Q.1) buy an sell problem                                         (II)
const data = [2, 5, 3, 1, 6];                                     function maxProfit(prices) {
let left = 0;                                                              let maxProfit = 0;
let right = 1;                                                             for (let i = 0; i < prices.length; i++) {
let maxProfit = 0;                                                           for (let j = i + 1; j < prices.length; j++) {
                                                                                  let profit = prices[j] - prices[i];
while (right < data.length) {                                                          if (profit > maxProfit) {
  if (data[right] > data[left]) {                                                          maxProfit = profit;
    const profit = data[right] - data[left];                                             }
    maxProfit = Math.max(profit, maxProfit);                                  }
  } else {                                                                 }
    left = right;                                                           return maxProfit;
  }                                                                 }
  right++;                                                          const result = maxProfit([4, 1, 2, 3, 5]);
}                                                                   console.log(result); 
console.log(maxProfit);

Q.2) two sum problem ()
function twosum(data,target)
{
    for(i=0;i<data.length;i++){
        for(j=i+1;j<data.length;j++){
            if(target == data[i] + data[j]){
                return [i,j]
            }
        }
    }
    return 0
}
const result = twosum([4,2,7,1,9], 8);
console.log(result);

Q.3) Leetcode question 217- return true if anyvalueis present atleast twice in the array otherwise return false
function isdublicate(data)                                                   EX-2 using set
{                                                                            function containsDuplicate(nums) {
  for(i=0;i<data.length;i++){                                                      const seen = new Set();
      for(j=i+1;j<data.length;j++){                                                for (let num of nums) {
          if(data[i]==data[j]){                                                        if (seen.has(num)){
              return false                                                                return true;
          }                                                                                 }
      }                                                                                seen.add(num);
  }                                                                                    }
  return true                                                                      return false;
}                                                                                }
const result = isdublicate([4,2,3,2,3,7,1,9]);                                 const result = containsDuplicate([4,1,2,3,4,5,4])
console.log(result);                                                           console.log(result)

Q.4) product of an array except self => basically the logic is start both the loops with i=0 and j=0 and multiply when j not equal to i means except self
function multiplyexceptself(nums) {
    let storemultiply = [];
    for (let i = 0; i < nums.length; i++) {
        let multiply = 1;
        for (let j = 0; j < nums.length; j++) {
            if (j !== i) {
                multiply *= nums[j];
            }
        }
        storemultiply.push(multiply);
    }
    return storemultiply;
}
const result = multiplyexceptself([4, 1, 2, 3, 5]);
console.log(result); 

Q.5) find the unique number from the array
(i) const data=[2,3,1,2,4,5,6]                                 (ii)                                                              (iii)
uniquedata=[]                                                    const data = [2, 3, 1, 2, 4, 5, 6];                                  const data = [2, 3, 1, 2, 4, 5, 6];
data.map((item)=>{                                               const uniquedata = data.filter((item, index) => {                    let uniquedata = [];                                                                                                                                            
                    if(!uniquedata.includes(item)){                                  return data.indexOf(item) === index;              for (let i = 0; i < data.length; i++) {                      
                        uniquedata.push(item)                                    });                                                      if (!uniquedata.includes(data[i])) {
                    }                                            console.log(uniquedata);                                                    uniquedata.push(data[i]);
})                                                                                                                                          }}
console.log(uniquedata)                                                                                                                 console.log(uniquedata) 

