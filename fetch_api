EX-2Note- fetch(url, Init) => fetch method jo hota hai wo two parameter leta hai. first is the url and the 2nd one is the object in which i need to pass the method, headers, and body
Note- fetch() method jo hota hai wo request body me string expect karta hai , raw object nahi isliye hum '{"name":"satyendra","age":26}' aise likhenge aur agr koi object likhna hoga 
to JSON.stringify(payload) aise likhenge kyuki hume object ko string me convert karna hoga kyuki fetch ka request body string me data chahta hai

EX-1 fetch post request                                EX-2  using .then()                                                              EX-3 using async await
Myinit = {                                                 const payload = { name: "satyendra", age: 26 };                                   const sendUserData = async () => {
      method:"POST",                                       const myInit = {                                                                  const payload = { name: "satyendra", age: 26 }; 
      headers:{                                                       method: "POST",                                                         const myInit = {
                content-Type:"application/json"                       headers: { "Content-Type": "application/json" },                                   method: "POST",
              },                                                      body: JSON.stringify(payload)                                                      headers: { "Content-Type": "application/json" },
       body: '{"name":"satyendra","age":26}'                        };                                                                                   body: JSON.stringify(payload) 
}                                                                                                                                                       }; 
fetch('http://localhost:8000/api/users',Myinit)             fetch('http://localhost:8000/api/users', myInit)                                      try {
.then((res)=>{                                               .then((res) => {                                                                           const response = await fetch('http://localhost:8000/api/users', myInit);
    if(!res.ok){                                                   if (!res.ok) {                                                                        if (!response.ok) {
     throw Error (res.statusError);                                       throw new Error(`HTTP error! status: ${res.status}`);  }                           throw new Error(`HTTP error! status: ${response.status}`);
    }                                                                      return res.json(); })                                                            }
}).catch((error)=>{                                           .then((data) => { console.log("Success! Response data:", data); })                          const data = await response.json();
   console.log("Error posting the data",error)                .catch((error) => {  console.log("Error posting the data:", error.message);                 console.log("Success! Response data:", data);
})                                                          });                                                                                           } 
                                                                                                                                                    catch (error) {
                                                                                                                                                             console.log("Error posting the data:", error.message);
                                                                                                                                                            } };
                                                                                                                                                     sendUserData();

EX-2 GET Method by fetch method => jab hum fetch method se GET request karte hai to hume two times .then ka use karna padhta hai. kyuki first time me wo hume status deta hai aur second time me wo hume data deta hai
ðŸ”¥ 1st THEN - Raw Response:
Response {type: "basic",url: "http://localhost:8000/data",redirected: false,status: 200,ok: true,statusText: "OK",headers: Headers,body: ReadableStream}

âœ… 2nd THEN - Parsed JSON Data:
{id: 1,username: "satyendra",role: "admin"}

// Ex-1 Get request using .then()                                                        // Ex-1 Get request using async await
fetch('http://localhost:8000/api/user', {                                                useEffect(() => {
                                                                                           const getUser = async () => {
  method: 'GET',                                                                            try { 
  headers: {                                                                                      const res = await fetch('http://localhost:8000/api/user', { method: 'GET',  headers: { 'Content-Type': 'application/json'  } })
    'Content-Type': 'application/json'                                                            if (!res.ok) {                                                             
  },                                                                                                          throw new Error(`HTTP error! status: ${res.status}`);
  credentials: 'include'                                                                                     }
})
.then((res) => {                                                                                   const data = await res.json();
  if (!res.ok) {                                                                                   console.log("User data:", data);
    throw new Error(`HTTP error! status: ${res.status}`);                                          console.log("ID:", data.id, "Roll:", data.roll, "Name:", data.name);
  }                                                                                               } 
  return res.json();                                                                           catch (error) {
})                                                                                                         console.error("Fetch failed:", error.message);
.then((data) => {                                                                                        }                                    
  console.log("User data received:", data);                                                     };
  console.log("ID:", data.id);                                                                 getUser();
  console.log("Roll:", data.roll);                                                            }, []);
  console.log("Name:", data.name);
})
.catch((error) => {
  console.error("Error fetching user data:", error.message);
});

                                                              
                                                              
